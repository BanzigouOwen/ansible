---
- name: Retrieve and store running configuration in date-based folder if not already saved
  hosts: 172.19.98.20  # IP of the Jump Host
  gather_facts: yes   # Needed to use ansible_date_time variable

  vars:
    target_host: 172.16.3.3         # IP of the Target Switch
    target_switch_username: "{{ target_switch_username }}"
    target_switch_password: "{{ target_switch_password }}"
    base_dir: "/tmp/configurations" # Base directory for saving config files

  tasks:
    - name: Telnet to target switch, disable pagination, show running-config, and exit
      expect:
        command: "telnet {{ target_host }}"
        responses:
          "Username:": "{{ target_switch_username }}"
          "Password:": "{{ target_switch_password }}"
          "SWOCESC0-1#": "terminal length 0\nshow running-config\nexit\n"
        timeout: 120
        echo: yes
      register: running_config_result
      failed_when: false

    - name: Filter output to only the running configuration
      set_fact:
        config_output: "{{ running_config_result.stdout | regex_replace('(?s)^.*?(SWOCESC0-1#show running-config\\r?\\n)', '\\1') }}"

    - name: Extract switch hostname from configuration
      set_fact:
        switch_hostname: "{{ config_output | regex_search('hostname\\s+(\\S+)', '\\1') }}"

    - name: Set current date variable (DD-MM-YYYY)
      set_fact:
         current_date: "{{ ansible_date_time.date | regex_replace('(\\d{4})-(\\d{2})-(\\d{2})', '\\3-\\2-\\1') }}"

    - name: Ensure base directory exists
      file:
        path: "{{ base_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure today's date directory exists
      file:
        path: "{{ base_dir }}/{{ current_date }}"
        state: directory
        mode: '0755'

    - name: Set file path variable for configuration file
      set_fact:
        config_file_path: "{{ base_dir }}/{{ current_date }}/{{ switch_hostname }}_{{ current_date }}.txt"

    - name: Check if the configuration file already exists
      stat:
        path: "{{ config_file_path }}"
      register: file_check

    - name: Save running configuration to file if it does not exist already
      copy:
        content: "{{ config_output }}"
        dest: "{{ config_file_path }}"
        mode: '0644'
      when: not file_check.stat.exists

    - name: Display final message regarding file saving
      debug:
        msg: >
          {% if file_check.stat.exists %}
          The configuration file already exists at {{ config_file_path }}. No new file was created.
          {% else %}
          The running configuration has been successfully saved at {{ config_file_path }}.
          {% endif %}
